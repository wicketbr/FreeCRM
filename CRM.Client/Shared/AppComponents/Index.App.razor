@implements IDisposable
@using Humanizer
@inject BlazorDataModel Model

@if (Model.Loaded && Model.LoggedIn && Model.View == _pageName) {
    if (Model.Tenant.TenantSettings.LogoIncludedOnHomePage && !String.IsNullOrWhiteSpace(LogoUrl)) {
        <div class="home-page-logo-container">
            <img src="@LogoUrl" class="logo-homepage" />
        </div>
    }

    if (_loading) {
        <LoadingMessage />
    } else {
        <h1 class="page-title">
            @if (!String.IsNullOrWhiteSpace(Model.Tenant.TenantSettings.AppIcon)) {
                <i>@((MarkupString)Model.Tenant.TenantSettings.AppIcon)</i>
            }
            <Language Tag="Welcome" ReplaceSpaces="true" /> @Model.User.FirstName
        </h1>
    }
}

@code {
    protected bool _loadedData = false;
    protected bool _loading = true;
    protected string _pageName = "home";

    public void Dispose() { 
        Model.OnChange -= OnDataModelUpdated;
    }

    protected override void OnInitialized()
    {
        Model.OnChange += OnDataModelUpdated;
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (Model.Loaded && Model.LoggedIn) {
            if (!_loadedData) {
                _loadedData = true;
                await LoadData();
            }
        }
    }

    protected void OnDataModelUpdated() {
        if (Model.View == _pageName) {
            StateHasChanged();
        }
    }

    protected async Task LoadData() {
        // Load any app-specific data here.
        _loading = false;
        StateHasChanged();
    }

    protected string LogoUrl {
        get {
            if (Model.Tenant.TenantSettings.Logo.HasValue && Model.Tenant.TenantSettings.Logo != Guid.Empty) {
                return Model.ApplicationUrl + "File/View/" + ((Guid)Model.Tenant.TenantSettings.Logo).ToString();
            } else {
                return String.Empty;
            }
        }
    }
}
